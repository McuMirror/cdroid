#!/usr/bin/python
import xml.sax
import os
import sys

class CDROIDHandler( xml.sax.ContentHandler ):
    def __init__(self):
        self.idlist=[]

    def startElement(self, tag, attributes):
        for attr in attributes.getNames():
            if ':id' in attr:
                self.addID(attributes.get(attr))

    def addID(self,name):
        pos=name.find('/');
        if pos>0:
            name=name[pos+1:]
            if name[0].isalpha() or (name[0]=='_'):
                self.idlist.append(name)

class IDGenerater(object):
    def __init__(self,idstart):
        self.idstart=idstart
        self.parser = xml.sax.make_parser()
        self.parser.setFeature(xml.sax.handler.feature_namespaces, 0)
        self.Handler = CDROIDHandler()
        self.parser.setContentHandler( self.Handler )

    def dict2RH(self,filepath):
        fr=open(filepath,"w")
        fr.write("#pragma once\n\n")
        fr.write("/*Generated by machine ,Do not edit!!!*/\n\n")
        fr.write("namespace cdroid{\n\n")
        fr.write("class R{\n")
        fr.write("public:\n\n")
        fr.write("    enum id {\n")
        dsize =len(self.Handler.idlist)
        i=0
        for k in self.Handler.idlist:
            fr.write("        "+k+"=")
            fr.write(str(self.idstart+i))
            if(i<dsize-1):
                fr.write(",")
            fr.write("\n")
            i+=1
        fr.write("    };//endof enum id\n\n")
        fr.write("};//endof class R\n\n")
        fr.write("};//endof namespace\n\n")
        fr.close()

    def dict2ID(self,filepath):
        fr=open(filepath,"w")
        fr.write("<resource xmlns:android=\"http://schemas.android.com/apk/res/android\">\n")
        i=0;
        for k in self.Handler.idlist:
            fr.write("  <id name=\""+k+"\">"+str(self.idstart+i)+"</id>\n")
            i+=1
        fr.write("</resource>\n\n")
        fr.close();

    def scanxml(self,scanPath):
        for top, dirs, nondirs in os.walk(scanPath):
            for item in nondirs:
                fname=os.path.join(top, item)
                if fname.find('.xml')>0:
                    print "parse file:"+fname
                    self.parser.parse(fname) 
        print self.Handler.idlist

if ( __name__ == "__main__"):
    idgen=IDGenerater(1000) 
    idgen.scanxml(sys.argv[1])
    idgen.dict2RH("./R.h")
    idgen.dict2ID("./ID.xml")

